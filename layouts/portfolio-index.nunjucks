{% extends "layouts/page.nunjucks" %}

{% from "layouts/partials/svg.nunjucks" import svg_split %}
{% from "layouts/partials/picture.nunjucks" import picture %}

{% block contents %}

{#
	categories here are for ordering
	but if I add a new one
	it'll automatically find it!
#}
{% set categories = [
	"web",
	"game",
	"3d"
] %}
{% for p in portfolio %}
	{% if p.categories %}
		{% set categories_list = p.categories.split(" ") %}
		{% for c in categories_list %}
			{% if (categories.indexOf(c) == -1) and (c != "misc") %}
				{% set categories = (categories.push(c), categories) %}
			{% endif %}
		{% endfor %}
	{% endif %}
{% endfor %}
{% if (categories.indexOf("misc") == -1) %}
	{% set categories = (categories.push("misc"), categories) %}
{% endif %}

{% set class = "hover-link center" %}
<div class="sublinks row-flex filter" style="visibility: hidden;">
    <a href=""
        class="{{ class }} current"
		id="listjs-all">
        all
    </a>
{% for c in categories %}
    <a href=""
    class="{{ class }}"
	id="listjs-{{ c }}">
        {{ c }}
    </a>
{% endfor %}
</div>

<div id="listjs">
<div class="list grid">
{% for p in portfolio %}
	<a href="{{ p.path }}"
		class="item"
		{% if p.categories %}
			data-categories="{{ p.categories }}">
		{% else %}
			data-categories="misc">
		{% endif %}
	{% if not p.images %}
		<svg xmlns="http://www.w3.org/2000/svg"
			viewBox="0 0 500 500"
			class="piece-description-background"
			style="
				{% if p.descriptionStyle.background.color %}
					--background-color: {{ p.descriptionStyle.background.color }}
				{% endif %}">
			{{ svg_split(p.description, 13, 30, "piece-description", p.descriptionStyle) }}
		</svg>
	{% else %}
		{% set img = p.images[0] %}
		{% for i in p.images %}
			{% if i.title %}
				{% set img = i %}
			{% endif %}
		{% endfor %}
		{% set url_title = p.title | replace(" ", "-") | replace("?", "") %}
		{% set path = rootPath + "images/portfolio/" + url_title + "/" %}
		
		{{ picture(img, path) }}

	{% endif %}
			<div class="center piece-name">
				<div>
					<div>
						{% if p.displaytitle %}
							{{ p.displaytitle | truncate(80) }}
						{% else %}
							{{ p.title | truncate(80) }}
						{% endif %}
					</div>
				</div>
			</div>
	</a>
{% endfor %}
</div>
</div>

{% endblock %}

{% block scripts %}
{{ super() }}
<script>
$(document).ready(function() {
	var filterList = new List('listjs', {
		valueNames: [
			{
				data: ['categories']
			}
		]
	});

	var fade_list = function(cb) {
		var time = 0.25;
		$('#listjs')
			.anim({
				opacity: 0
			},
			time,
			'ease-in-out',
			function() {
				cb();
				$('#listjs')
				.anim({
					opacity: 1
				},
				time,
				'ease-in-out');
			});
	}

	var on_filter_click = function($item, filter) {
		$('.sublinks.filter').children().removeClass('current');
		$item.addClass('current');

		var urlParams = new URLSearchParams();
		urlParams.append('category', filter);
		var href = `?${urlParams.toString()}`;
		
		var cb = function() {
			filterList.filter(function(item) {
				var cat = item.values().categories.split(" ");
				return cat.indexOf(filter) > -1;
			})
		};

		if (filter == 'all') {
			href = location.href.split('?')[0];
			cb = () => filterList.filter();
		}

		history.replaceState({}, '', href);
		fade_list(cb);

		return false;
	}

	$('#listjs-all').on('click', (e) => on_filter_click($(e.currentTarget), 'all'));

	{% for c in categories %}
	$('#listjs-{{ c }}').on('click', (e) => on_filter_click($(e.currentTarget), '{{ c }}'));
	{% endfor %}

	$('.sublinks').css('visibility', 'visible');

	if (window.location.search.length > 0) {
		var urlParams = new URLSearchParams(window.location.search);
		var category = urlParams.get('category') || false;

		if (category) {
			$('#listjs-' + category).trigger('click');
		}
	}
});
</script>
{% endblock %}